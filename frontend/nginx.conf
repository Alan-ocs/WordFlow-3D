server {
    listen 80;
    root /usr/share/nginx/html;
    index index.html;

    charset utf-8;

    # This handles the React app
    location / {
        try_files $uri $uri/ /index.html;
        add_header Content-Type "text/html; charset=utf-8";
    }

    # API proxy configuration
    location /api/ {
        proxy_pass http://wordcloud_backend:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Socket.io proxy configuration
    location /socket.io/ {
        proxy_pass http://wordcloud_backend:3001/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Handle font files
    location /fonts/ {
        alias /usr/share/nginx/html/fonts/;
        add_header Access-Control-Allow-Origin *;
    }

    # Cache static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|json|typeface)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Access-Control-Allow-Origin *;
    }

    # Add security headers with appropriate CSP for Three.js and WebGL
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data: *; connect-src 'self' ws: wss:; worker-src 'self' blob:;" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Health check endpoint
    location /health {
        return 200 "OK\n";
    }
}
